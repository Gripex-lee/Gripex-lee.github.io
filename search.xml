<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>重庆二手房价影响因素</title>
      <link href="/2018/08/29/%E9%87%8D%E5%BA%86%E4%BA%8C%E6%89%8B%E6%88%BF%E4%BB%B7%E5%BD%B1%E5%93%8D%E5%9B%A0%E7%B4%A0/"/>
      <url>/2018/08/29/%E9%87%8D%E5%BA%86%E4%BA%8C%E6%89%8B%E6%88%BF%E4%BB%B7%E5%BD%B1%E5%93%8D%E5%9B%A0%E7%B4%A0/</url>
      <content type="html"><![CDATA[<p><img src="/2018/08/29/重庆二手房价影响因素/house.jpeg" alt="house"><br>当城市规模发展到一定程度之后，城市建设将会由外延式拓展逐渐让位于内涵式的更新、改造和保护。这意味着受城市土地资源的限制,新建房数量会逐步减少，而存量房的保有量将会越来越大，此时房地产市场的交易重心必然会从新房转移到二手房上来。本次试验通过对链家重庆二手房公开数据的统计分析，研究影响重庆二手房均价的影响，为二手房定价提供理论依据。<br><a id="more"></a></p><p>2017年7月，重庆二手住宅成交14125套，而2016年7月成交则是4407套，同比增长3倍多。重庆二手房市场正在蓬勃发展。研究二手房房价问题也正在情理之中。那么二手房房价的合理价格到底是多少呢？这个问题牵扯到很多因素：卧室数、客厅数、楼层高度、房屋朝向、装修状况、总面积、建造年份、房屋类型、有无电梯、周围有没有轻轨以及所在的位置。众多因素中，哪些重要？哪些不重要？能否将它们的相对重要性量化出来？如果能回答这个问题，我们就可以帮助自己为理想的二手住房明码标价。这是研究的主要目的。</p><h2 id="目标网址"><a href="#目标网址" class="headerlink" title="目标网址"></a>目标网址</h2><p><a href="https://cq.lianjia.com/ershoufang/" target="_blank" rel="noopener">链家</a><br><img src="/2018/08/29/重庆二手房价影响因素/lianjia.jpg" alt="lianjia"></p><h2 id="一、数据抓取"><a href="#一、数据抓取" class="headerlink" title="一、数据抓取"></a>一、数据抓取</h2><p>数据由<strong>python</strong>的<code>scrapy</code>框架采集，并存入<strong>MySQL</strong>。项目源代码已经托管到<strong>Github</strong>：<a href="https://github.com/Gripex-lee/CQhouse_data" target="_blank" rel="noopener">https://github.com/Gripex-lee/CQhouse_data</a>。</p><h3 id="主要的文件CQhouse-py内容如下："><a href="#主要的文件CQhouse-py内容如下：" class="headerlink" title="主要的文件CQhouse.py内容如下："></a>主要的文件<code>CQhouse.py</code>内容如下：</h3><ul><li><code>parse</code>为对第一页的解析方法</li><li><code>detail_parse</code>通过<code>parse</code>方法提取详细信息</li><li>每一个<code>item</code>为一条数据</li><li>通过<code>xpath</code>得到数据</li></ul><div><div class="fold_hider"><div class="close hider_title">-------------------点击显/隐代码</div></div><div class="fold"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">import scrapy</span><br><span class="line">from scrapy.http import Request</span><br><span class="line">from house_data.items import HouseDataItem</span><br><span class="line"></span><br><span class="line">class CqhouseSpider(scrapy.Spider):</span><br><span class="line">    name = &apos;CQhouse&apos;</span><br><span class="line">    allowed_domains = [&apos;cq.lianjia.com&apos;]</span><br><span class="line">    start_urls = [&apos;https://cq.lianjia.com/ershoufang/pg1&apos;]</span><br><span class="line"></span><br><span class="line">    def parse(self, response):</span><br><span class="line">        for url in response.xpath(&apos;//div[@class=&quot;info clear&quot;]/div[@class=&quot;title&quot;]/a/@href&apos;).extract():</span><br><span class="line">            yield Request(url=url,callback=self.detail_parse)</span><br><span class="line"></span><br><span class="line">        for i in range(1,101):</span><br><span class="line">            next_url = self.start_urls[0].replace(&quot;pg1&quot;,&quot;pg&quot;+str(i))</span><br><span class="line">            yield Request(url = next_url,callback=self.parse)</span><br><span class="line"></span><br><span class="line">    def detail_parse(self,response):</span><br><span class="line">        item = HouseDataItem()</span><br><span class="line">        item[&quot;url&quot;] = response.xpath(&apos;//div[@class=&quot;houseRecord&quot;]/span[@class=&quot;info&quot;]/text()&apos;).extract_first()</span><br><span class="line">        item[&quot;price_per&quot;] = response.xpath(&apos;//div[@class=&quot;unitPrice&quot;]/span/text()&apos;).extract_first()</span><br><span class="line">        item[&quot;price_total&quot;] = response.xpath(&apos;//div[@class=&quot;price &quot;]/span/text()&apos;).extract_first()</span><br><span class="line">        item[&quot;room_number&quot;] = re.findall(r&quot;\d+&quot;,response.xpath(&apos;//div[@class=&quot;room&quot;]/div[@class=&quot;mainInfo&quot;]/text()&apos;).extract_first())[0]</span><br><span class="line">        item[&quot;living_room_number&quot;] = re.findall(r&quot;\d+&quot;,response.xpath(&apos;//div[@class=&quot;room&quot;]/div[@class=&quot;mainInfo&quot;]/text()&apos;).extract_first())[1]</span><br><span class="line">        item[&quot;high&quot;] = re.findall(r&quot;[\d.]+&quot;,response.xpath(&apos;//div[@class=&quot;room&quot;]/div[@class=&quot;subInfo&quot;]/text()&apos;).extract_first().split(&quot;/&quot;)[1])[0]</span><br><span class="line">        </span><br><span class="line">        if len(response.xpath(&apos;//div[@class=&quot;type&quot;]/div[@class=&quot;mainInfo&quot;]/text()&apos;).extract_first()) &gt;= 3:</span><br><span class="line">            item[&quot;house_toward&quot;] = response.xpath(&apos;//div[@class=&quot;type&quot;]/div[@class=&quot;mainInfo&quot;]/text()&apos;).extract_first().split(&quot; &quot;)[0]</span><br><span class="line">        else:</span><br><span class="line">            item[&quot;house_toward&quot;] = response.xpath(&apos;//div[@class=&quot;type&quot;]/div[@class=&quot;mainInfo&quot;]/text()&apos;).extract_first()</span><br><span class="line">        </span><br><span class="line">        if re.findall(r&quot;.*?/.*?&quot;,response.xpath(&apos;//div[@class=&quot;type&quot;]/div[@class=&quot;subInfo&quot;]/text()&apos;).extract_first()):</span><br><span class="line">            item[&quot;house_type&quot;] = response.xpath(&apos;//div[@class=&quot;type&quot;]/div[@class=&quot;subInfo&quot;]/text()&apos;).extract_first().split(&quot;/&quot;)[1]</span><br><span class="line">        else:</span><br><span class="line">            item[&quot;house_type&quot;] = response.xpath(&apos;//div[@class=&quot;type&quot;]/div[@class=&quot;subInfo&quot;]/text()&apos;).extract_first()</span><br><span class="line">        </span><br><span class="line">        item[&quot;size&quot;] = re.findall(r&quot;[\d.]+&quot;,response.xpath(&apos;//div[@class=&quot;area&quot;]/div[@class=&quot;mainInfo&quot;]/text()&apos;).extract_first())[0]</span><br><span class="line">        if re.findall(r&quot;[\d.]+&quot;,response.xpath(&apos;//div[@class=&quot;area&quot;]/div[@class=&quot;subInfo&quot;]/text()&apos;).extract_first().split(&quot;/&quot;)[0]):</span><br><span class="line">            item[&quot;build_year&quot;] = re.findall(r&quot;[\d.]+&quot;,response.xpath(&apos;//div[@class=&quot;area&quot;]/div[@class=&quot;subInfo&quot;]/text()&apos;).extract_first().split(&quot;/&quot;)[0])[0]</span><br><span class="line">        else:</span><br><span class="line">            item[&quot;build_year&quot;] = &quot;未知&quot;</span><br><span class="line">        </span><br><span class="line">        item[&quot;buding_type&quot;] = response.xpath(&apos;//*[@id=&quot;introduction&quot;]/div/div/div[2]/div[2]/ul/li[2]/span[2]/text()&apos;).extract_first()</span><br><span class="line">        item[&quot;dianti&quot;] = response.xpath(&apos;//*[@id=&quot;introduction&quot;]/div/div/div[1]/div[2]/ul/li[11]/text()&apos;).extract_first()</span><br><span class="line">        item[&quot;name&quot;] = response.xpath(&apos;/html/body/div[5]/div[2]/div[4]/div[1]/a[1]/text()&apos;).extract_first()</span><br><span class="line">        item[&quot;location&quot;] = response.xpath(&apos;/html/body/div[5]/div[2]/div[4]/div[2]/span[2]/a[1]/text()&apos;).extract_first()</span><br><span class="line">        if response.xpath(&apos;//div[@class=&quot;areaName&quot;]/a[@title]/text()&apos;).extract_first():</span><br><span class="line">            item[&quot;rail&quot;] = &quot;是&quot;</span><br><span class="line">        else:</span><br><span class="line">            item[&quot;rail&quot;] = &quot;否&quot;</span><br><span class="line">        yield item</span><br></pre></td></tr></table></figure></div></div><h3 id="通过改写pipelines-py将得到的数据存入MySQL-该文件内容如下-此处以本地数据库为例-："><a href="#通过改写pipelines-py将得到的数据存入MySQL-该文件内容如下-此处以本地数据库为例-：" class="headerlink" title="通过改写pipelines.py将得到的数据存入MySQL,该文件内容如下(此处以本地数据库为例)："></a>通过改写<code>pipelines.py</code>将得到的数据存入<code>MySQL</code>,该文件内容如下(此处以本地数据库为例)：</h3><div><div class="fold_hider"><div class="close hider_title">-------------------点击显/隐代码</div></div><div class="fold"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line"></span><br><span class="line">class HouseDataPipeline(object):</span><br><span class="line">    def process_item(self, item, spider):</span><br><span class="line">        return item</span><br><span class="line"></span><br><span class="line">class MysqlPipeline(object):</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    插入mysql数据库</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.conn =pymysql.connect(host=&apos;localhost&apos;,port=3306,user=&apos;root&apos;,passwd=&apos;liwenwu.610&apos;,db=&apos;cqhouse&apos;,use_unicode=True, charset=&quot;utf8&quot;)</span><br><span class="line">        self.cursor = self.conn.cursor()</span><br><span class="line"></span><br><span class="line">    def process_item(self,item,spider):</span><br><span class="line">        insert_sql = &apos;&apos;&apos;</span><br><span class="line">        insert into house_data(url,price_per,price_total,room_number,living_room_number,high,house_toward,house_type,size,build_year,buding_type,dianti,name,location,rail) VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)</span><br><span class="line">        &apos;&apos;&apos;</span><br><span class="line"></span><br><span class="line">        self.cursor.execute(insert_sql,(item[&quot;url&quot;],item[&quot;price_per&quot;],item[&quot;price_total&quot;],item[&quot;room_number&quot;],item[&quot;living_room_number&quot;],item[&quot;high&quot;],item[&quot;house_toward&quot;],item[&quot;house_type&quot;],item[&quot;size&quot;],item[&quot;build_year&quot;],item[&quot;buding_type&quot;],item[&quot;dianti&quot;],item[&quot;name&quot;],item[&quot;location&quot;],item[&quot;rail&quot;]))</span><br><span class="line">        self.conn.commit()</span><br></pre></td></tr></table></figure></div></div><p>前提是已经在本地数据库建立了<code>cqhouse</code>数据库并在其中建立表<code>house_data</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database cqhouse;</span><br><span class="line">use cqhouse;</span><br><span class="line">create table house_data(url char(100),price_per char(20),price_total char(100),room_number char(10),living_room_number char(20),high char(20),house_toward char(20),house_type char(20),size char(20),build_year char(20),buding_type char(20),dianti char(5),name char(50),location char(20),rail char(10));</span><br></pre></td></tr></table></figure><h2 id="二、R-语言的简单处理"><a href="#二、R-语言的简单处理" class="headerlink" title="二、R 语言的简单处理"></a>二、R 语言的简单处理</h2><h3 id="从MySQL中导入数据"><a href="#从MySQL中导入数据" class="headerlink" title="从MySQL中导入数据"></a>从<code>MySQL</code>中导入数据</h3><div><div class="fold_hider"><div class="close hider_title">-------------------点击显/隐代码</div></div><div class="fold"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">library(RMySQL)</span><br><span class="line">library(mice)</span><br><span class="line"># 连接数据库&apos;cqhouse&apos;</span><br><span class="line">con1=dbConnect(RMySQL::MySQL(),</span><br><span class="line">               dbname=&apos;cqhouse&apos;,</span><br><span class="line">               username=&apos;root&apos;,</span><br><span class="line">               password=&apos;liwenwu.610&apos;,</span><br><span class="line">               host</span><br><span class="line">               =&apos;localhost&apos;)</span><br><span class="line"># 设置编码解决乱码问题</span><br><span class="line">dbSendQuery(con1,&quot;SET NAMES gbk&quot;)</span><br><span class="line"></span><br><span class="line"># 从&apos;cqhouse&apos;的&apos;house_data&apos;中导入数据</span><br><span class="line">res = dbSendQuery(con1,&quot;select * from house_data;&quot;)</span><br><span class="line">mydata = dbFetch(res,n=-1)</span><br></pre></td></tr></table></figure></div></div><p><code>mydata</code>的前几行如下：<br><img src="/2018/08/29/重庆二手房价影响因素/mydata.png" alt="mydata"></p><h3 id="重命名变量-更改变量类型"><a href="#重命名变量-更改变量类型" class="headerlink" title="重命名变量+更改变量类型"></a>重命名变量+更改变量类型</h3><p>由于存入数据库时定义的是字符变量，在这里对变量的类型进行更改，为了使用方便我们修改变量名。<br><div><div class="fold_hider"><div class="close hider_title">-------------------点击显/隐代码</div></div><div class="fold"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">colnames(mydata) = c(&quot;id&quot;,&quot;price&quot;,&quot;total_price&quot;,&quot;bedroom&quot;,&quot;living_room&quot;,&quot;floor&quot;,&quot;toward&quot;,</span><br><span class="line">                      &quot;type&quot;,&quot;size&quot;,&quot;build_year&quot;,&quot;building_type&quot;,&quot;elector&quot;,&quot;Community_name&quot;,&quot;location&quot;,&quot;rail&quot;)</span><br><span class="line"></span><br><span class="line">mydata$id = as.integer(mydata$id)</span><br><span class="line">mydata$price = as.numeric(mydata$price)</span><br><span class="line">mydata$total_price = as.numeric(mydata$total_price)</span><br><span class="line">mydata$bedroom = as.integer(mydata$bedroom)</span><br><span class="line">mydata$living_room = as.integer(mydata$living_room)</span><br><span class="line">mydata$floor = as.integer(mydata$floor)</span><br><span class="line">mydata$size = as.numeric(mydata$size)</span><br><span class="line">mydata$build_year = as.integer(mydata$build_year)</span><br><span class="line">mydata$toward = as.factor(mydata$toward)</span><br><span class="line">mydata$type = as.factor(mydata$type)</span><br><span class="line">mydata$building_type = as.factor(mydata$building_type)</span><br><span class="line">mydata$elector = as.factor(mydata$elector)</span><br><span class="line">mydata$location = as.factor(mydata$location)</span><br><span class="line">mydata$rail = as.factor(mydata$rail)</span><br><span class="line"></span><br><span class="line">data = mydata[,!names(mydata) %in% c(&quot;id&quot;,&quot;Community_name&quot;)]</span><br><span class="line">data$elector[which(data$elector == &quot;暂无数据&quot;)] = NA</span><br><span class="line">data$type[which(data$type == &quot;其他&quot;)] = NA</span><br></pre></td></tr></table></figure></div></div></p><p>修改后的<code>data</code>如下,其中有几个变量含有缺失值<br><img src="/2018/08/29/重庆二手房价影响因素/data.png" alt="data"></p><h3 id="查看缺失值"><a href="#查看缺失值" class="headerlink" title="查看缺失值"></a>查看缺失值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md.pattern(data)</span><br></pre></td></tr></table></figure><p><img src="/2018/08/29/重庆二手房价影响因素/queshi.png" alt="queshi">从中可以了解到<code>bulid_year</code>缺失328个，<code>elector</code>缺失517个，<code>type</code>缺失942个。<code>build_year</code>和<code>elector</code>的缺失值较少，所以不打算删除这两个变量，考虑到变量<code>type</code>装修状况是一个能影响二手房价的重要因素，虽然其缺失值相对较多，但是我们仍不采用删除变量的操作。</p><p>下面用<code>R</code>进行缺失值处理：</p><ul><li>对<code>build_year</code>的缺失值用随机森林随机插补的方法(mice)，不考虑跟建筑年份无关的变量：<code>id</code>,<code>bedroom</code>,<code>living_room</code>,<code>elector</code>(含缺失值),<code>price</code>(因变量),<code>type</code>(含缺失值);</li><li><code>elector</code>和<code>type</code>的缺失值采用最近邻插补<em>KNN</em>的方法补齐,因为相似的二手房可能在有无电梯和装修状况上有类似情况。  </li></ul><div><div class="fold_hider"><div class="close hider_title">-------------------点击显/隐代码</div></div><div class="fold"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mice_mod &lt;- mice(data[, !names(data) %in% c(&apos;id&apos;,&apos;bedroom&apos;,&apos;living_room&apos;,&apos;elector&apos;,&apos;price&apos;,&apos;type&apos;)],</span><br><span class="line">                 method=&apos;rf&apos;)  #rf为randomForest</span><br><span class="line">mice_output &lt;- complete(mice_mod)</span><br><span class="line">data$build_year &lt;- mice_output$build_year</span><br><span class="line"></span><br><span class="line">require(DMwR)</span><br><span class="line">knnOutput &lt;- knnImputation(data[,!names(data) %in% c(&apos;id&apos;,&apos;price&apos;,&apos;bedroom&apos;,&apos;living_room&apos;,&apos;type&apos;,&apos;size&apos;,&apos;building_type&apos;)],meth = &quot;weighAvg&quot;) </span><br><span class="line">data$elector &lt;- knnOutput$elector</span><br><span class="line"></span><br><span class="line">knnOutput &lt;- knnImputation(data[,!names(data) %in% c(&apos;id&apos;,&apos;price&apos;,&apos;bedroom&apos;,&apos;living_room&apos;,&apos;size&apos;,&apos;elector&apos;)],meth = &quot;weighAvg&quot;) </span><br><span class="line">data$type &lt;- knnOutput$type</span><br><span class="line">md.pattern(data)</span><br></pre></td></tr></table></figure></div></div><p><img src="/2018/08/29/重庆二手房价影响因素/mice.png" alt="mice">此时缺失值已经全部补齐。</p><p>总共含2983条数据，每一个数据代表当时（2018-8-23）正在销售的二手房。因变量是房屋的销售价格(price)，单位：元/平方米。除了因变量外，还考虑下面的解释变量，这些变量都能直接或间接地影响因变量（价格）：  </p><ul><li><strong>卧室数</strong> (bedroom)、<strong>客厅数</strong> (living_room)、<strong>面积</strong> (size)：该类指标的大小间接反映了房屋的大小和居住体验。  </li><li><strong>楼层高度</strong> (floor)：楼层越高空气流通越好，同时耗费的材料更多。  </li><li><strong>房屋朝向</strong> (toward)：不同的朝向对于采光、通风有较大的影响。  </li><li><strong>装修状况</strong> (type)：该指标刻画销售房屋是毛坯、简装还是精装房。显然，同一个房屋，精装的销售价格会显然高于毛坯和简装房。但是到底高多少还需要通过数据来得到结论。  </li><li><strong>建筑年份</strong> (build_year)：该指标对价格的影响显而易见，同种样式的房屋建筑年份越近说明越新。  </li><li><strong>房屋类型</strong> (building_type)：该指标刻画房屋是商品房还是经济适用房等，不同的类型对价格也有相应的影响。该指标有拆迁还建房、房改房、集资房、经济适用房、商品房5个值。 </li><li><strong>有无电梯</strong> (elector)：显然有电梯的相对会比没有电梯的价格高。该指标有是否两个值。  </li><li><strong>所在位置</strong> (location)：地理位置是一个重要的影响因素，我们这里主要研究在重庆，不同区的价格是否有显著的不同。</li><li><strong>是否靠近轻轨</strong> (rail)：周围是否有轻轨决定了所在位置是否方便出行，如今轻轨是重庆市民的主要出行方式，因此这个指标是一个及其重要的指标，该指标有是和否两个值。</li></ul><h3 id="数值型变量-bedroom-living-room-floor-size-build-year"><a href="#数值型变量-bedroom-living-room-floor-size-build-year" class="headerlink" title="数值型变量(bedroom,living_room,floor,size,build_year)"></a>数值型变量(<code>bedroom</code>,<code>living_room</code>,<code>floor</code>,<code>size</code>,<code>build_year</code>)</h3><p><img src="/2018/08/29/重庆二手房价影响因素/lianxu.png" alt="number"><br>从中可以得到类似下面的信息：</p><ul><li><code>bedroom</code>的最小值为<code>1</code>,最大值为<code>9</code>,中位数为<code>3</code>,均值<code>2.791</code>表明重庆二手房的卧室数量平均为<code>2.791</code>个;</li><li><code>living_room</code>最小值<code>0</code>表明有的二手房中没有客厅;</li><li><code>floor</code>：最高的楼层有<code>58</code>层，最低<code>1</code>层;</li><li><code>size</code>:房屋面积在<code>20.39~574.08</code>之间;</li><li><code>build_year</code>:二手房中建造年限最大的达到<code>30</code>年，同时也有今年刚建造的。</li></ul><h3 id="相关系数"><a href="#相关系数" class="headerlink" title="相关系数"></a>相关系数</h3><p><img src="/2018/08/29/重庆二手房价影响因素/coor.png" alt="corr"><br>从相关系数的可视化中看到：</p><ul><li><code>floor</code>和<code>price</code>具有较强的相关性,相关系数达到<code>0.8</code>;</li><li><code>size</code>和<code>price</code>负相关;</li><li><code>living_room</code>和<code>bedroom</code>的相关性较弱。</li></ul><h3 id="分类型变量"><a href="#分类型变量" class="headerlink" title="分类型变量"></a>分类型变量</h3><p><img src="/2018/08/29/重庆二手房价影响因素/lisan.png" alt="lisan"><br>从中可以得到类似下面的信息：</p><ul><li>重庆二手房中<code>精装房</code>较多，占比一半以上;</li><li>样本中的房屋类型大多都是<code>商品房</code>，分布不均匀。</li></ul><h3 id="price的直方图"><a href="#price的直方图" class="headerlink" title="price的直方图"></a><code>price</code>的直方图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">attach(data)</span><br><span class="line">library(ggplot2)</span><br><span class="line">library(corrplot)</span><br><span class="line">ggplot(data,aes(x=price))+geom_histogram(binwidth = 200, fill = &quot;blue&quot;, colour = &quot;grey&quot;)</span><br></pre></td></tr></table></figure><p><img src="/2018/08/29/重庆二手房价影响因素/price.png" alt="直方图"><br>房屋价格大致服从正态分布，房价均值为16209.47元/平方米。</p><h3 id="价格关于电梯在装修状况分类下的箱线图显示："><a href="#价格关于电梯在装修状况分类下的箱线图显示：" class="headerlink" title="价格关于电梯在装修状况分类下的箱线图显示："></a><code>价格</code>关于<code>电梯</code>在<code>装修状况</code>分类下的箱线图显示：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ggplot(data,aes(x=elector,y=price))+</span><br><span class="line">  geom_boxplot()+</span><br><span class="line">  facet_wrap(~type,scales = &quot;free&quot;)</span><br></pre></td></tr></table></figure><p><img src="/2018/08/29/重庆二手房价影响因素/elector-price.png" alt="elector"><br>由图了解到：</p><ul><li>不同<code>装修状况</code>下二手房价没有明显差异;</li><li><code>有电梯</code>的二手房的房价高于<code>没有电梯</code>的二手房房价。</li></ul><h3 id="二手房的地理分布"><a href="#二手房的地理分布" class="headerlink" title="二手房的地理分布"></a>二手房的地理分布</h3><p>根据<code>data</code>中的<code>place</code>得到下图（由于<code>place</code>变量区分度不高，所以看到的点较少）：<br><img src="/2018/08/29/重庆二手房价影响因素/ditu.png" alt="ditu"></p><div><div class="fold_hider"><div class="close hider_title">-------------------点击显/隐代码</div></div><div class="fold"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">library(REmap)</span><br><span class="line">library(dplyr)</span><br><span class="line">data = filter(data,place != &quot;渝中化龙桥&quot;) #找不到该点的坐标</span><br><span class="line">pointdata = data$place</span><br><span class="line"></span><br><span class="line"># 以重庆照母山森林公园为中心</span><br><span class="line">remapB(center = c(106.5054,29.62866),</span><br><span class="line">       zoom = 12,</span><br><span class="line">       color = &quot;Bright&quot;,</span><br><span class="line">       title = &quot;重庆二手房地理分布&quot;,</span><br><span class="line">       subtitle = &quot;二手房所在地区&quot;,</span><br><span class="line">       markLineData = NA,</span><br><span class="line">       markPointData = pointdata,</span><br><span class="line">       markLineTheme = markLineControl(),</span><br><span class="line">       markPointTheme = markPointControl(symbol = &quot;circle&quot;,symbolSize = 4,color = &quot;blue&quot;,effect = F),</span><br><span class="line">       geoData = NA)</span><br></pre></td></tr></table></figure></div></div><p>由图了解到：</p><ul><li>大部分的二手房地址在轨道线附近（也可能是由于重庆的轨道线覆盖较广导致）；</li><li>江北、渝北、沙坪坝、渝中地区的房源较多；</li></ul><p>由于房屋地理位置不是非常精确，图中无法反应过多信息，这一点可以在后期的改进中多花功夫。</p><h3 id="价格关于地点location"><a href="#价格关于地点location" class="headerlink" title="价格关于地点location"></a>价格关于地点<code>location</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ggplot(data,aes(x=location,y=price))+geom_boxplot()</span><br></pre></td></tr></table></figure><p><img src="/2018/08/29/重庆二手房价影响因素/location.png" alt="location"><br>由图了解到：</p><ul><li>位置的不同对房价有较大影响;</li><li><code>江北区</code>的房价较均值最高，而<code>江津</code>最低。</li></ul><h3 id="关于朝向toward"><a href="#关于朝向toward" class="headerlink" title="关于朝向toward"></a>关于朝向<code>toward</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ggplot(data,aes(x=toward,y=price))+geom_boxplot()</span><br></pre></td></tr></table></figure><p><img src="/2018/08/29/重庆二手房价影响因素/toward.png" alt="toward"><br>由<code>箱线图</code>知道不同的<code>朝向</code>在样本中表现为：没有较大差异，这似乎与普遍认知‘南北通透’较好有所相悖，或许是因为身处山城重庆，四面环山使我们无法辨别方向了吧。</p><h3 id="就所有变量建立模型"><a href="#就所有变量建立模型" class="headerlink" title="就所有变量建立模型"></a>就所有变量建立模型</h3><p>本次采用简单的<code>线性模型</code>来拟合二手房价和各影响因素的关系：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lm1=lm(price~bedroom+living_room+floor+type+size+build_year+building_type+elector+location+toward+rail,data)</span><br><span class="line">summary(lm1)</span><br></pre></td></tr></table></figure></p><p><img src="/2018/08/29/重庆二手房价影响因素/R1.png" alt="R1"><br>模型的<code>P值</code>显著(说明至少有因素对二手房价有显著影响)，<code>拟合优度</code>(该值越大说明拟合效果越好)为<code>0.477</code>。可能是由于变量对二手房价的影响实在太小或样本量分布不均所致，可以发现<code>living_room</code>,<code>floor</code>,<code>building_type</code>和房屋朝向都不显著。<br><img src="/2018/08/29/重庆二手房价影响因素/summary.png" alt="summary"></p><h3 id="删除不显著变量后建立模型"><a href="#删除不显著变量后建立模型" class="headerlink" title="删除不显著变量后建立模型"></a>删除不显著变量后建立模型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lm2=lm(price~bedroom+type+size+build_year+elector+location+rail,data)</span><br><span class="line">summary(lm2)</span><br></pre></td></tr></table></figure><p><img src="/2018/08/29/重庆二手房价影响因素/R2.png" alt="R2"><br>此时模型<code>P值</code>显著，<code>拟合优度</code>稍有降低，发现<code>type毛坯</code>、<code>location北碚</code>和<code>location大渡口</code>较显著外，其余变量都非常显著。说明模型建立成功。</p>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> scrapy </tag>
            
            <tag> R </tag>
            
            <tag> 方差分析 </tag>
            
            <tag> 二手房 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hadoop 伪分布式下的 wordcount 示例</title>
      <link href="/2018/08/01/Hadoop%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/08/01/Hadoop%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p><img src="/2018/08/01/Hadoop伪分布式搭建/hadoop.jpg" alt="hadoop"><br><strong>Hadoop</strong>是一个由Apache基金会所开发的分布式系统基础架构。用户可以在不了解分布式底层细节的情况下，开发分布式程序。充分利用集群的威力进行高速运算和存储。数据处理中如果<code>R</code>，<code>python</code>处理不了的大数据可以通过Hadoop实现。<br><a id="more"></a></p><h3 id="首先安装虚拟机并配置Hadoop"><a href="#首先安装虚拟机并配置Hadoop" class="headerlink" title="首先安装虚拟机并配置Hadoop"></a>首先安装虚拟机并配置Hadoop</h3><p><a href="https://www.toutiao.com/a6558402434790588936/" target="_blank" rel="noopener">安装虚拟机VMware Workstation Pro</a><br><a href="https://www.toutiao.com/a6566458468625023496/" target="_blank" rel="noopener">手把手教你在VMware虚拟机中安装Ubuntu14.04系统</a><br><a href="https://www.cnblogs.com/sench/p/8542175.html" target="_blank" rel="noopener">Ubuntu16.04下Hadoop的本地安装与配置</a></p><h3 id="cd至hadoop的安装路径，并开启namenode和datanode"><a href="#cd至hadoop的安装路径，并开启namenode和datanode" class="headerlink" title="cd至hadoop的安装路径，并开启namenode和datanode"></a><code>cd</code>至hadoop的安装路径，并开启<code>namenode</code>和<code>datanode</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sbin/start-dfs.sh</span><br></pre></td></tr></table></figure><p>输入<code>jps</code>后出现以下情况:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lee@lee-virtual-machine:~/usr/local/hadoop$ jps</span><br><span class="line">4678 SecondaryNameNode</span><br><span class="line">4247 NameNode</span><br><span class="line">4798 Jps</span><br><span class="line">4414 DataNode</span><br></pre></td></tr></table></figure></p><h3 id="启动资源管理器"><a href="#启动资源管理器" class="headerlink" title="启动资源管理器"></a>启动资源管理器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sbin/start-yarn.sh</span><br></pre></td></tr></table></figure><p>出现以下情况为正常:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lee@lee-virtual-machine:~/usr/local/hadoop$ jps</span><br><span class="line">5348 Jps</span><br><span class="line">4852 ResourceManager</span><br><span class="line">4678 SecondaryNameNode</span><br><span class="line">4247 NameNode</span><br><span class="line">5015 NodeManager</span><br><span class="line">4414 DataNode</span><br></pre></td></tr></table></figure></p><h3 id="运行-wordcount示例"><a href="#运行-wordcount示例" class="headerlink" title="运行 wordcount示例"></a>运行 wordcount示例</h3><ul><li><p>新建文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop fs -mkdir /user</span><br><span class="line">$ hadoop fs -mkdir /user/root</span><br></pre></td></tr></table></figure></li><li><p>查看文件夹权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop fs -ls -d /user/root</span><br></pre></td></tr></table></figure></li></ul><p>在<a href="http://localhost:8088/cluster" target="_blank" rel="noopener">http://localhost:8088/cluster</a>访问集群资源管理器，如图：<br><img src="/2018/08/01/Hadoop伪分布式搭建/hadoop.png" alt="集群资源管理器"></p><ul><li><p>新建一个<code>txt</code>文件（路径为/home/lee/usr/local/file/），内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hello world</span><br><span class="line">hello tom</span><br><span class="line">hello jake</span><br><span class="line">fuck tom</span><br></pre></td></tr></table></figure></li><li><p>上传文件到客户端机器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop fs -put /home/lee/usr/<span class="built_in">local</span>/file/test.txt /user/root/test.txt</span><br></pre></td></tr></table></figure></li><li><p>找到<code>MapReduce Examples</code>的jar包（路径为/home/lee/usr/local/），并运行单词计数任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop jar /home/lee/usr/<span class="built_in">local</span>/hadoop-mapreduce-examples-2.9.1.jar wordcount /user/root/test.txt /user/root/test_out</span><br></pre></td></tr></table></figure></li></ul><p>部分运行结果：<br><img src="/2018/08/01/Hadoop伪分布式搭建/mapreduce.png" alt="mapreduce部分结果"></p><ul><li>查看结果<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop fs -cat /user/root/test_out/part-r-00000</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fuck1</span><br><span class="line">hello3</span><br><span class="line">jake1</span><br><span class="line">tom2</span><br><span class="line">world1</span><br></pre></td></tr></table></figure><h3 id="任务结束，停止HDFS和YARN"><a href="#任务结束，停止HDFS和YARN" class="headerlink" title="任务结束，停止HDFS和YARN"></a>任务结束，停止HDFS和YARN</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sbin/stop-dfs.sh</span><br><span class="line">$ sbin/stop-yarn.sh</span><br></pre></td></tr></table></figure><h4 id="推荐网站"><a href="#推荐网站" class="headerlink" title="推荐网站"></a>推荐网站</h4><p><a href="https://www.cnblogs.com/bookwed/p/5896619.html" target="_blank" rel="noopener">linux下安装mysql</a><br><a href="https://jingyan.baidu.com/article/9158e0001b8a8fa2541228a0.html" target="_blank" rel="noopener">VMWare如何实现主机与虚拟机的文件共享与传输</a></p>]]></content>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> 伪分布 </tag>
            
            <tag> WordCount </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python爬取人民网新闻评论并制作词云</title>
      <link href="/2018/07/17/Python%E7%88%AC%E5%8F%96%E4%BA%BA%E6%B0%91%E7%BD%91%E6%96%B0%E9%97%BB%E8%AF%84%E8%AE%BA%E5%B9%B6%E5%88%B6%E4%BD%9C%E8%AF%8D%E4%BA%91/"/>
      <url>/2018/07/17/Python%E7%88%AC%E5%8F%96%E4%BA%BA%E6%B0%91%E7%BD%91%E6%96%B0%E9%97%BB%E8%AF%84%E8%AE%BA%E5%B9%B6%E5%88%B6%E4%BD%9C%E8%AF%8D%E4%BA%91/</url>
      <content type="html"><![CDATA[<p><img src="/2018/07/17/Python爬取人民网新闻评论并制作词云/renmin.jpg" alt="comments"></p><h3 id="目标网址"><a href="#目标网址" class="headerlink" title="目标网址"></a>目标网址</h3><p><a href="http://bbs1.people.com.cn/post/129/0/0/166006014_1.html#replyList" target="_blank" rel="noopener">紧紧抓住大有可为的历史机遇期</a><br><a id="more"></a></p><h3 id="简单源代码"><a href="#简单源代码" class="headerlink" title="简单源代码"></a>简单源代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import wordcloud</span><br><span class="line">import jieba</span><br><span class="line"></span><br><span class="line">content = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,5):</span><br><span class="line">    url = <span class="string">'http://bbs1.people.com.cn/post/129/0/0/166006014_'</span>+str(i)+<span class="string">'.html#replyList'</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">    <span class="string">'Host'</span>: <span class="string">'bbs1.people.com.cn'</span>,</span><br><span class="line">    <span class="string">'upgrade-insecure-requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.7 Safari/537.36'</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url,headers = headers) </span><br><span class="line">    response.encoding = <span class="string">'utf-8'</span> </span><br><span class="line">    text = response.text </span><br><span class="line">    txts = re.findall(r<span class="string">'&lt;a class="treeReply" target="_blank".*?&gt;\r\n\t\t\t\t\t\t(.*?)\t\t\t\t\t&lt;/a&gt;'</span>,text,re.S)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(txts)):</span><br><span class="line">        content.append(txts[j])</span><br><span class="line"></span><br><span class="line">txt = <span class="string">','</span>.join(content)</span><br><span class="line">w = wordcloud.WordCloud( width=1500,font_path=<span class="string">"msyh.ttc"</span>,height=1050) <span class="comment">#宽度，字体和高度</span></span><br><span class="line">w.generate(<span class="string">" "</span>.join(jieba.lcut(txt)))</span><br><span class="line">w.to_file(<span class="string">"pywcloud.png"</span>)</span><br></pre></td></tr></table></figure><h3 id="代码及简单解析"><a href="#代码及简单解析" class="headerlink" title="代码及简单解析"></a>代码及简单解析</h3><ul><li><p>导入要使用的开源库.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import wordcloud</span><br><span class="line">import jieba</span><br></pre></td></tr></table></figure></li><li><p>新建列表<em>content</em>用来存储所有评论.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">content = []</span><br></pre></td></tr></table></figure></li></ul><p>观察网站了解到评论总共4页，只需要简单的改动网址即可：</p><pre><code class="bash"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,5):    url = <span class="string">'http://bbs1.people.com.cn/post/129/0/0/166006014_'</span>+str(i)+<span class="string">'.html#replyList'</span>    headers = {    <span class="string">'Host'</span>: <span class="string">'bbs1.people.com.cn'</span>,    <span class="string">'upgrade-insecure-requests'</span>: <span class="string">'1'</span>,    <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.7 Safari/537.36'</span>    }    response = requests.get(url,headers = headers)     response.encoding = <span class="string">'utf-8'</span>     text = response.text     txts = re.findall(r<span class="string">'&lt;a class="treeReply" target="_blank".*?&gt;\r\n\t\t\t\t\t\t(.*?)\t\t\t\t\t&lt;/a&gt;'</span>,text,re.S)    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(txts)):        content.append(txts[j])</code></pre><p>通过在<em>content</em>列表中添加“逗号”将评论连接起来得到<code>txt</code>，方便进行词云的制作.</p><pre><code class="bash">txt = <span class="string">','</span>.join(content)</code></pre><p>设置字体以及图片的宽度和高度，通过<code>jieba</code>库的<code>lcut()</code>函数将<code>txt</code>做分词处理，并输出图片 <em>pywcloud.png</em>.</p><pre><code class="bash">w = wordcloud.WordCloud( width=1500,font_path=<span class="string">"msyh.ttc"</span>,height=1050) <span class="comment">#宽度，字体和高度</span>w.generate(<span class="string">" "</span>.join(jieba.lcut(txt)))w.to_file(<span class="string">"pywcloud.png"</span>)</code></pre><h3 id="词云图"><a href="#词云图" class="headerlink" title="词云图"></a>词云图</h3><p><img src="/2018/07/17/Python爬取人民网新闻评论并制作词云/wordcloud.png" alt="词云图"></p><p>finish！</p>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 词云 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python对天堂图片网的简单图片爬取</title>
      <link href="/2018/07/12/Python%E5%AF%B9%E5%A4%A9%E5%A0%82%E5%9B%BE%E7%89%87%E7%BD%91%E7%9A%84%E7%AE%80%E5%8D%95%E5%9B%BE%E7%89%87%E7%88%AC%E5%8F%96/"/>
      <url>/2018/07/12/Python%E5%AF%B9%E5%A4%A9%E5%A0%82%E5%9B%BE%E7%89%87%E7%BD%91%E7%9A%84%E7%AE%80%E5%8D%95%E5%9B%BE%E7%89%87%E7%88%AC%E5%8F%96/</url>
      <content type="html"><![CDATA[<p><img src="/2018/07/12/Python对天堂图片网的简单图片爬取/tiantang.png" alt="天堂网爬虫"><br>爬虫是python最主要的应用领域之一，在了解了网站的结构之后，通过python就可以轻松实现数据的抓取，本次通过<code>requests</code>以及<code>re</code>库实现图片的抓取。</p><h3 id="目标网址"><a href="#目标网址" class="headerlink" title="目标网址"></a>目标网址</h3><p><a href="http://www.ivsky.com/" target="_blank" rel="noopener">天堂图片网</a><br><a id="more"></a></p><h3 id="简单源代码"><a href="#简单源代码" class="headerlink" title="简单源代码"></a>简单源代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">from requests import get</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">pic_urls = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,10):</span><br><span class="line">    url = <span class="string">'http://www.ivsky.com/tupian/index_'</span>+ str(i) + <span class="string">'.html'</span></span><br><span class="line">    response = get(url).text</span><br><span class="line">    pic_url = re.findall(<span class="string">'&lt;div class=\"il_img\"&gt;&lt;a href=\"(.*?)\" title=\"'</span>,response,re.S)</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> pic_url:</span><br><span class="line">        pic_urls.append(<span class="string">'http://www.ivsky.com'</span>+ url)</span><br><span class="line"></span><br><span class="line">pictures = []</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> pic_urls:</span><br><span class="line">    text = get(url).text</span><br><span class="line">    pictures.append(re.findall(<span class="string">'&lt;img src=\"(.*?)\"'</span>,text,re.S))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">list1 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(pic_urls)):</span><br><span class="line">    list1.extend(pictures[i])</span><br><span class="line">HD_pic = []</span><br><span class="line">HD_p = []</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> list1:</span><br><span class="line">    HD_pic.append(url.replace(<span class="string">'/t/'</span>,<span class="string">'/pre/'</span>))</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> HD_pic:</span><br><span class="line">    HD_p.append(url.replace(<span class="string">'/m/'</span> , <span class="string">'/pre/'</span>))</span><br><span class="line">HD_p</span><br><span class="line"></span><br><span class="line">n = 0</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> HD_pic:</span><br><span class="line">    n += 1</span><br><span class="line">    picture = get(url).content</span><br><span class="line">    with open(<span class="string">'C:/Users/lee/Desktop/pic/%s.jpg'</span> %n, <span class="string">'wb'</span>) as f:</span><br><span class="line">        f.write(picture)</span><br></pre></td></tr></table></figure><h3 id="代码及简单解析"><a href="#代码及简单解析" class="headerlink" title="代码及简单解析"></a>代码及简单解析</h3><p>导入要使用的开源库,<code>re</code>为正则表达式需要的库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from requests import get</span><br><span class="line">import re</span><br></pre></td></tr></table></figure></p><ul><li>选择要下载的页数(例如10),通过简单的字符串处理得到相- 应的(10个)网址赋值给<em>url</em> </li><li>然后通过<code>requests</code>库的<strong>get</strong>方法得到网站的内容并赋值给<em>response</em> </li><li>接着运用正则表达式得到图片网址<em>pic_url</em>并将其添加到<em>pic_urls</em>  </li><li>其中<em>pic_urls</em>包含的是所有图集的网址。(由于每个图集中还有数量不等的图片,所以下面将每个图集中图片的网址提取出来)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pic_urls = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,10):</span><br><span class="line">    url = <span class="string">'http://www.ivsky.com/tupian/index_'</span>+ str(i) + <span class="string">'.html'</span></span><br><span class="line">    response = get(url).text</span><br><span class="line">    pic_url = re.findall(<span class="string">'&lt;div class=\"il_img\"&gt;&lt;a href=\"(.*?)\" title=\"'</span>,response,re.S)</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> pic_url:</span><br><span class="line">        pic_urls.append(<span class="string">'http://www.ivsky.com'</span>+ url)</span><br></pre></td></tr></table></figure><p>同上对<strong>get</strong>请求得到的<em>url</em>进行正则提取得到每个图片的网址.</p><pre><code class="bash">pictures = []<span class="keyword">for</span> url <span class="keyword">in</span> pic_urls:    text = get(url).text    pictures.append(re.findall(<span class="string">'&lt;img src=\"(.*?)\"'</span>,text,re.S))</code></pre><p>在浏览器中单独输入某个网址会发现图片较小,需要进行正则替换得到高清的图片(将”/t/“替换成”/pre/“).</p><pre><code class="bash">list1 = []<span class="keyword">for</span> i <span class="keyword">in</span> range(len(pic_urls)):    list1.extend(pictures[i])<span class="keyword">for</span> url <span class="keyword">in</span> list1:    HD_pic.append(url.replace(<span class="string">'/t/'</span>,<span class="string">'/pre/'</span>))<span class="keyword">for</span> url <span class="keyword">in</span> HD_pic:    HD_p.append(url.replace(<span class="string">'/m/'</span> , <span class="string">'/pre/'</span>))HD_p</code></pre><p>通过<strong>content</strong>得到二进制文件,再依次将其写入桌面新建的<em>pic</em>文件夹中</p><pre><code class="bash">n = 0<span class="keyword">for</span> url <span class="keyword">in</span> HD_pic:    n += 1    picture = get(url).content    with open(<span class="string">'C:/Users/lee/Desktop/pic/%s.jpg'</span> %n, <span class="string">'wb'</span>) as f:        f.write(picture)</code></pre><p>你可以在你指定的位置查看已经下载的图片。</p>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Github托管文件</title>
      <link href="/2018/07/04/new01/"/>
      <url>/2018/07/04/new01/</url>
      <content type="html"><![CDATA[<p><img src="/2018/07/04/new01/timg.jpg" alt="Github"></p><p>GitHub是开源软件项目的托管平台，因为只支持git作为唯一的版本库格式进行托管，故名GitHub。<br>2018年6月4日，微软宣布，通过75亿美元的股票交易收购代码托管平台GitHub。<br><a id="more"></a></p><p>Github的好处在于能为程序猿管理代码提供便捷的同时为世界各地的代码交流提供桥梁。下面是用Github管理代码的基本操作。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="1-下载git-正常的软件管家都可进行下载"><a href="#1-下载git-正常的软件管家都可进行下载" class="headerlink" title="1.下载git: 正常的软件管家都可进行下载"></a>1.下载git: 正常的软件管家都可进行下载</h4><h4 id="2-注册Github-登陆-https-github-com-进行注册"><a href="#2-注册Github-登陆-https-github-com-进行注册" class="headerlink" title="2.注册Github: 登陆 https://github.com/ 进行注册"></a>2.注册Github: 登陆 <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> 进行注册</h4><h4 id="3-将git和GitHub连接起来"><a href="#3-将git和GitHub连接起来" class="headerlink" title="3.将git和GitHub连接起来"></a>3.将git和GitHub连接起来</h4><ul><li>获取ssh密匙 id_rsa.pub</li><li>Github里，找到<code>settings</code>，填入密匙</li></ul><h3 id="托管代码文件"><a href="#托管代码文件" class="headerlink" title="托管代码文件"></a>托管代码文件</h3><h4 id="1-确定git和GitHub已经连接："><a href="#1-确定git和GitHub已经连接：" class="headerlink" title="1.确定git和GitHub已经连接："></a>1.确定git和GitHub已经连接：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">$ git remote add origin <span class="string">"github的连接地址"</span></span><br></pre></td></tr></table></figure><p>注：如果出现<code>already exists</code>: </p><pre><code class="bash">$ git remote rm origin$ git pull origin master</code></pre><h4 id="2-将本地文件推到Github上"><a href="#2-将本地文件推到Github上" class="headerlink" title="2.将本地文件推到Github上"></a>2.将本地文件推到Github上</h4><pre><code class="bash">$ git add .</code></pre><p>注：如果出现<code>On branch master nothing to commit, working tree clean</code>：依次输入</p><pre><code class="bash">$ git branch -b <span class="built_in">test</span>$ git branch -D master$ git fetch origin master$ git chekcout master$ git add .$ git push origin master</code></pre><pre><code class="bash">$ git commit -m <span class="string">'demo'</span>$ git push origin master</code></pre><p>至此完成文件托管。</p>]]></content>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
