<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Hadoop 伪分布式下的 wordcount 示例</title>
      <link href="/2018/08/01/Hadoop%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/08/01/Hadoop%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p><img src="/2018/08/01/Hadoop伪分布式搭建/hadoop.jpg" alt="hadoop"><br><strong>Hadoop</strong>是一个由Apache基金会所开发的分布式系统基础架构。用户可以在不了解分布式底层细节的情况下，开发分布式程序。充分利用集群的威力进行高速运算和存储。数据处理中如果<code>R</code>，<code>python</code>处理不了的大数据可以通过Hadoop实现。<br><a id="more"></a></p><h3 id="首先安装虚拟机并配置Hadoop"><a href="#首先安装虚拟机并配置Hadoop" class="headerlink" title="首先安装虚拟机并配置Hadoop"></a>首先安装虚拟机并配置Hadoop</h3><p><a href="https://www.toutiao.com/a6558402434790588936/" target="_blank" rel="noopener">安装虚拟机VMware Workstation Pro</a><br><a href="https://www.toutiao.com/a6566458468625023496/" target="_blank" rel="noopener">手把手教你在VMware虚拟机中安装Ubuntu14.04系统</a><br><a href="https://www.cnblogs.com/sench/p/8542175.html" target="_blank" rel="noopener">Ubuntu16.04下Hadoop的本地安装与配置</a></p><h3 id="cd至hadoop的安装路径，并开启namenode和datanode"><a href="#cd至hadoop的安装路径，并开启namenode和datanode" class="headerlink" title="cd至hadoop的安装路径，并开启namenode和datanode"></a><code>cd</code>至hadoop的安装路径，并开启<code>namenode</code>和<code>datanode</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sbin/start-dfs.sh</span><br></pre></td></tr></table></figure><p>输入<code>jps</code>后出现以下情况:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lee@lee-virtual-machine:~/usr/local/hadoop$ jps</span><br><span class="line">4678 SecondaryNameNode</span><br><span class="line">4247 NameNode</span><br><span class="line">4798 Jps</span><br><span class="line">4414 DataNode</span><br></pre></td></tr></table></figure></p><h3 id="启动资源管理器"><a href="#启动资源管理器" class="headerlink" title="启动资源管理器"></a>启动资源管理器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sbin/start-yarn.sh</span><br></pre></td></tr></table></figure><p>出现以下情况为正常:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lee@lee-virtual-machine:~/usr/local/hadoop$ jps</span><br><span class="line">5348 Jps</span><br><span class="line">4852 ResourceManager</span><br><span class="line">4678 SecondaryNameNode</span><br><span class="line">4247 NameNode</span><br><span class="line">5015 NodeManager</span><br><span class="line">4414 DataNode</span><br></pre></td></tr></table></figure></p><h3 id="运行-wordcount示例"><a href="#运行-wordcount示例" class="headerlink" title="运行 wordcount示例"></a>运行 wordcount示例</h3><ul><li><p>新建文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop fs -mkdir /user</span><br><span class="line">$ hadoop fs -mkdir /user/root</span><br></pre></td></tr></table></figure></li><li><p>查看文件夹权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop fs -ls -d /user/root</span><br></pre></td></tr></table></figure></li></ul><p>在<a href="http://localhost:8088/cluster" target="_blank" rel="noopener">http://localhost:8088/cluster</a>访问集群资源管理器，如图：<br><img src="/2018/08/01/Hadoop伪分布式搭建/hadoop.png" alt="集群资源管理器"></p><ul><li><p>新建一个<code>txt</code>文件（路径为/home/lee/usr/local/file/），内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hello world</span><br><span class="line">hello tom</span><br><span class="line">hello jake</span><br><span class="line">fuck tom</span><br></pre></td></tr></table></figure></li><li><p>上传文件到客户端机器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop fs -put /home/lee/usr/<span class="built_in">local</span>/file/test.txt /user/root/test.txt</span><br></pre></td></tr></table></figure></li><li><p>找到<code>MapReduce Examples</code>的jar包（路径为/home/lee/usr/local/），并运行单词计数任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop jar /home/lee/usr/<span class="built_in">local</span>/hadoop-mapreduce-examples-2.9.1.jar wordcount /user/root/test.txt /user/root/test_out</span><br></pre></td></tr></table></figure></li></ul><p>部分运行结果：<br><img src="/2018/08/01/Hadoop伪分布式搭建/mapreduce.png" alt="mapreduce部分结果"></p><ul><li>查看结果<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop fs -cat /user/root/test_out/part-r-00000</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fuck1</span><br><span class="line">hello3</span><br><span class="line">jake1</span><br><span class="line">tom2</span><br><span class="line">world1</span><br></pre></td></tr></table></figure><h3 id="任务结束，停止HDFS和YARN"><a href="#任务结束，停止HDFS和YARN" class="headerlink" title="任务结束，停止HDFS和YARN"></a>任务结束，停止HDFS和YARN</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sbin/stop-dfs.sh</span><br><span class="line">$ sbin/stop-yarn.sh</span><br></pre></td></tr></table></figure><h4 id="推荐网站"><a href="#推荐网站" class="headerlink" title="推荐网站"></a>推荐网站</h4><p><a href="https://www.cnblogs.com/bookwed/p/5896619.html" target="_blank" rel="noopener">linux下安装mysql</a><br><a href="https://jingyan.baidu.com/article/9158e0001b8a8fa2541228a0.html" target="_blank" rel="noopener">VMWare如何实现主机与虚拟机的文件共享与传输</a></p>]]></content>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> 伪分布 </tag>
            
            <tag> WordCount </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python爬取人民网新闻评论并制作词云</title>
      <link href="/2018/07/17/Python%E7%88%AC%E5%8F%96%E4%BA%BA%E6%B0%91%E7%BD%91%E6%96%B0%E9%97%BB%E8%AF%84%E8%AE%BA%E5%B9%B6%E5%88%B6%E4%BD%9C%E8%AF%8D%E4%BA%91/"/>
      <url>/2018/07/17/Python%E7%88%AC%E5%8F%96%E4%BA%BA%E6%B0%91%E7%BD%91%E6%96%B0%E9%97%BB%E8%AF%84%E8%AE%BA%E5%B9%B6%E5%88%B6%E4%BD%9C%E8%AF%8D%E4%BA%91/</url>
      <content type="html"><![CDATA[<p><img src="/2018/07/17/Python爬取人民网新闻评论并制作词云/renmin.jpg" alt="comments"></p><h3 id="目标网址"><a href="#目标网址" class="headerlink" title="目标网址"></a>目标网址</h3><p><a href="http://bbs1.people.com.cn/post/129/0/0/166006014_1.html#replyList" target="_blank" rel="noopener">紧紧抓住大有可为的历史机遇期</a><br><a id="more"></a></p><h3 id="简单源代码"><a href="#简单源代码" class="headerlink" title="简单源代码"></a>简单源代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import wordcloud</span><br><span class="line">import jieba</span><br><span class="line"></span><br><span class="line">content = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,5):</span><br><span class="line">    url = <span class="string">'http://bbs1.people.com.cn/post/129/0/0/166006014_'</span>+str(i)+<span class="string">'.html#replyList'</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">    <span class="string">'Host'</span>: <span class="string">'bbs1.people.com.cn'</span>,</span><br><span class="line">    <span class="string">'upgrade-insecure-requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.7 Safari/537.36'</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url,headers = headers) </span><br><span class="line">    response.encoding = <span class="string">'utf-8'</span> </span><br><span class="line">    text = response.text </span><br><span class="line">    txts = re.findall(r<span class="string">'&lt;a class="treeReply" target="_blank".*?&gt;\r\n\t\t\t\t\t\t(.*?)\t\t\t\t\t&lt;/a&gt;'</span>,text,re.S)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(txts)):</span><br><span class="line">        content.append(txts[j])</span><br><span class="line"></span><br><span class="line">txt = <span class="string">','</span>.join(content)</span><br><span class="line">w = wordcloud.WordCloud( width=1500,font_path=<span class="string">"msyh.ttc"</span>,height=1050) <span class="comment">#宽度，字体和高度</span></span><br><span class="line">w.generate(<span class="string">" "</span>.join(jieba.lcut(txt)))</span><br><span class="line">w.to_file(<span class="string">"pywcloud.png"</span>)</span><br></pre></td></tr></table></figure><h3 id="代码及简单解析"><a href="#代码及简单解析" class="headerlink" title="代码及简单解析"></a>代码及简单解析</h3><ul><li><p>导入要使用的开源库.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import wordcloud</span><br><span class="line">import jieba</span><br></pre></td></tr></table></figure></li><li><p>新建列表<em>content</em>用来存储所有评论.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">content = []</span><br></pre></td></tr></table></figure></li></ul><p>观察网站了解到评论总共4页，只需要简单的改动网址即可：</p><pre><code class="bash"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,5):    url = <span class="string">'http://bbs1.people.com.cn/post/129/0/0/166006014_'</span>+str(i)+<span class="string">'.html#replyList'</span>    headers = {    <span class="string">'Host'</span>: <span class="string">'bbs1.people.com.cn'</span>,    <span class="string">'upgrade-insecure-requests'</span>: <span class="string">'1'</span>,    <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.7 Safari/537.36'</span>    }    response = requests.get(url,headers = headers)     response.encoding = <span class="string">'utf-8'</span>     text = response.text     txts = re.findall(r<span class="string">'&lt;a class="treeReply" target="_blank".*?&gt;\r\n\t\t\t\t\t\t(.*?)\t\t\t\t\t&lt;/a&gt;'</span>,text,re.S)    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(txts)):        content.append(txts[j])</code></pre><p>通过在<em>content</em>列表中添加“逗号”将评论连接起来得到<code>txt</code>，方便进行词云的制作.</p><pre><code class="bash">txt = <span class="string">','</span>.join(content)</code></pre><p>设置字体以及图片的宽度和高度，通过<code>jieba</code>库的<code>lcut()</code>函数将<code>txt</code>做分词处理，并输出图片 <em>pywcloud.png</em>.</p><pre><code class="bash">w = wordcloud.WordCloud( width=1500,font_path=<span class="string">"msyh.ttc"</span>,height=1050) <span class="comment">#宽度，字体和高度</span>w.generate(<span class="string">" "</span>.join(jieba.lcut(txt)))w.to_file(<span class="string">"pywcloud.png"</span>)</code></pre><h3 id="词云图"><a href="#词云图" class="headerlink" title="词云图"></a>词云图</h3><p><img src="/2018/07/17/Python爬取人民网新闻评论并制作词云/wordcloud.png" alt="词云图"></p><p>finish！</p>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 词云 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python对天堂图片网的简单图片爬取</title>
      <link href="/2018/07/12/Python%E5%AF%B9%E5%A4%A9%E5%A0%82%E5%9B%BE%E7%89%87%E7%BD%91%E7%9A%84%E7%AE%80%E5%8D%95%E5%9B%BE%E7%89%87%E7%88%AC%E5%8F%96/"/>
      <url>/2018/07/12/Python%E5%AF%B9%E5%A4%A9%E5%A0%82%E5%9B%BE%E7%89%87%E7%BD%91%E7%9A%84%E7%AE%80%E5%8D%95%E5%9B%BE%E7%89%87%E7%88%AC%E5%8F%96/</url>
      <content type="html"><![CDATA[<p><img src="/2018/07/12/Python对天堂图片网的简单图片爬取/tiantang.png" alt="天堂网爬虫"><br>爬虫是python最主要的应用领域之一，在了解了网站的结构之后，通过python就可以轻松实现数据的抓取，本次通过<code>requests</code>以及<code>re</code>库实现图片的抓取。</p><h3 id="目标网址"><a href="#目标网址" class="headerlink" title="目标网址"></a>目标网址</h3><p><a href="http://www.ivsky.com/" target="_blank" rel="noopener">天堂图片网</a><br><a id="more"></a></p><h3 id="简单源代码"><a href="#简单源代码" class="headerlink" title="简单源代码"></a>简单源代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">from requests import get</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">pic_urls = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,10):</span><br><span class="line">    url = <span class="string">'http://www.ivsky.com/tupian/index_'</span>+ str(i) + <span class="string">'.html'</span></span><br><span class="line">    response = get(url).text</span><br><span class="line">    pic_url = re.findall(<span class="string">'&lt;div class=\"il_img\"&gt;&lt;a href=\"(.*?)\" title=\"'</span>,response,re.S)</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> pic_url:</span><br><span class="line">        pic_urls.append(<span class="string">'http://www.ivsky.com'</span>+ url)</span><br><span class="line"></span><br><span class="line">pictures = []</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> pic_urls:</span><br><span class="line">    text = get(url).text</span><br><span class="line">    pictures.append(re.findall(<span class="string">'&lt;img src=\"(.*?)\"'</span>,text,re.S))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">list1 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(pic_urls)):</span><br><span class="line">    list1.extend(pictures[i])</span><br><span class="line">HD_pic = []</span><br><span class="line">HD_p = []</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> list1:</span><br><span class="line">    HD_pic.append(url.replace(<span class="string">'/t/'</span>,<span class="string">'/pre/'</span>))</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> HD_pic:</span><br><span class="line">    HD_p.append(url.replace(<span class="string">'/m/'</span> , <span class="string">'/pre/'</span>))</span><br><span class="line">HD_p</span><br><span class="line"></span><br><span class="line">n = 0</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> HD_pic:</span><br><span class="line">    n += 1</span><br><span class="line">    picture = get(url).content</span><br><span class="line">    with open(<span class="string">'C:/Users/lee/Desktop/pic/%s.jpg'</span> %n, <span class="string">'wb'</span>) as f:</span><br><span class="line">        f.write(picture)</span><br></pre></td></tr></table></figure><h3 id="代码及简单解析"><a href="#代码及简单解析" class="headerlink" title="代码及简单解析"></a>代码及简单解析</h3><p>导入要使用的开源库,<code>re</code>为正则表达式需要的库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from requests import get</span><br><span class="line">import re</span><br></pre></td></tr></table></figure></p><ul><li>选择要下载的页数(例如10),通过简单的字符串处理得到相- 应的(10个)网址赋值给<em>url</em> </li><li>然后通过<code>requests</code>库的<strong>get</strong>方法得到网站的内容并赋值给<em>response</em> </li><li>接着运用正则表达式得到图片网址<em>pic_url</em>并将其添加到<em>pic_urls</em>  </li><li>其中<em>pic_urls</em>包含的是所有图集的网址。(由于每个图集中还有数量不等的图片,所以下面将每个图集中图片的网址提取出来)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pic_urls = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,10):</span><br><span class="line">    url = <span class="string">'http://www.ivsky.com/tupian/index_'</span>+ str(i) + <span class="string">'.html'</span></span><br><span class="line">    response = get(url).text</span><br><span class="line">    pic_url = re.findall(<span class="string">'&lt;div class=\"il_img\"&gt;&lt;a href=\"(.*?)\" title=\"'</span>,response,re.S)</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> pic_url:</span><br><span class="line">        pic_urls.append(<span class="string">'http://www.ivsky.com'</span>+ url)</span><br></pre></td></tr></table></figure><p>同上对<strong>get</strong>请求得到的<em>url</em>进行正则提取得到每个图片的网址.</p><pre><code class="bash">pictures = []<span class="keyword">for</span> url <span class="keyword">in</span> pic_urls:    text = get(url).text    pictures.append(re.findall(<span class="string">'&lt;img src=\"(.*?)\"'</span>,text,re.S))</code></pre><p>在浏览器中单独输入某个网址会发现图片较小,需要进行正则替换得到高清的图片(将”/t/“替换成”/pre/“).</p><pre><code class="bash">list1 = []<span class="keyword">for</span> i <span class="keyword">in</span> range(len(pic_urls)):    list1.extend(pictures[i])<span class="keyword">for</span> url <span class="keyword">in</span> list1:    HD_pic.append(url.replace(<span class="string">'/t/'</span>,<span class="string">'/pre/'</span>))<span class="keyword">for</span> url <span class="keyword">in</span> HD_pic:    HD_p.append(url.replace(<span class="string">'/m/'</span> , <span class="string">'/pre/'</span>))HD_p</code></pre><p>通过<strong>content</strong>得到二进制文件,再依次将其写入桌面新建的<em>pic</em>文件夹中</p><pre><code class="bash">n = 0<span class="keyword">for</span> url <span class="keyword">in</span> HD_pic:    n += 1    picture = get(url).content    with open(<span class="string">'C:/Users/lee/Desktop/pic/%s.jpg'</span> %n, <span class="string">'wb'</span>) as f:        f.write(picture)</code></pre><p>你可以在你指定的位置查看已经下载的图片。</p>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Github托管文件</title>
      <link href="/2018/07/04/new01/"/>
      <url>/2018/07/04/new01/</url>
      <content type="html"><![CDATA[<p><img src="/2018/07/04/new01/timg.jpg" alt="Github"></p><p>GitHub是开源软件项目的托管平台，因为只支持git作为唯一的版本库格式进行托管，故名GitHub。<br>2018年6月4日，微软宣布，通过75亿美元的股票交易收购代码托管平台GitHub。<br><a id="more"></a></p><p>Github的好处在于能为程序猿管理代码提供便捷的同时为世界各地的代码交流提供桥梁。下面是用Github管理代码的基本操作。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="1-下载git-正常的软件管家都可进行下载"><a href="#1-下载git-正常的软件管家都可进行下载" class="headerlink" title="1.下载git: 正常的软件管家都可进行下载"></a>1.下载git: 正常的软件管家都可进行下载</h4><h4 id="2-注册Github-登陆-https-github-com-进行注册"><a href="#2-注册Github-登陆-https-github-com-进行注册" class="headerlink" title="2.注册Github: 登陆 https://github.com/ 进行注册"></a>2.注册Github: 登陆 <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> 进行注册</h4><h4 id="3-将git和GitHub连接起来"><a href="#3-将git和GitHub连接起来" class="headerlink" title="3.将git和GitHub连接起来"></a>3.将git和GitHub连接起来</h4><ul><li>获取ssh密匙 id_rsa.pub</li><li>Github里，找到<code>settings</code>，填入密匙</li></ul><h3 id="托管代码文件"><a href="#托管代码文件" class="headerlink" title="托管代码文件"></a>托管代码文件</h3><h4 id="1-确定git和GitHub已经连接："><a href="#1-确定git和GitHub已经连接：" class="headerlink" title="1.确定git和GitHub已经连接："></a>1.确定git和GitHub已经连接：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">$ git remote add origin <span class="string">"github的连接地址"</span></span><br></pre></td></tr></table></figure><p>注：如果出现<code>already exists</code>: </p><pre><code class="bash">$ git remote rm origin$ git pull origin master</code></pre><h4 id="2-将本地文件推到Github上"><a href="#2-将本地文件推到Github上" class="headerlink" title="2.将本地文件推到Github上"></a>2.将本地文件推到Github上</h4><pre><code class="bash">$ git add .</code></pre><p>注：如果出现<code>On branch master nothing to commit, working tree clean</code>：依次输入</p><pre><code class="bash">$ git branch -b <span class="built_in">test</span>$ git branch -D master$ git fetch origin master$ git chekcout master$ git add .$ git push origin master</code></pre><pre><code class="bash">$ git commit -m <span class="string">'demo'</span>$ git push origin master</code></pre><p>至此完成文件托管。</p>]]></content>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
